{"version":3,"sources":["actions/user-actions.js","component/login-page.js","component/header.js","actions/converter-actions.js","component/converter.js","actions/history-actions.js","component/history.js","utils/authenticated-route.js","utils/authHeader.js","App.js","serviceWorker.js","index.js"],"names":["loginUser","login","password","authToken","createBasicAuthToken","axios","get","headers","authorization","registerUserAuthentication","sessionStorage","setItem","interceptors","request","use","config","isUserLoggedIn","setAxiosInterceptors","username","window","btoa","getItem","LoginPage","state","error","onChange","e","setState","target","name","value","onSubmit","preventDefault","then","location","href","catch","this","props","history","push","className","classNames","show","type","placeholder","Component","Header","removeItem","to","activeClassName","onClick","logoutUser","getCurrency","convert","converter","post","Converter","allCurrency","startCurrencyId","endCurrencyId","startAmount","endAmount","str","replace","res","data","startCurrency","endCurrency","map","id","charCode","key","getHistory","date","History","historyRows","index","AuthenticatedRoute","setToken","token","defaults","common","App","exact","path","component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"oZAIO,SAASA,EAAUC,EAAOC,GAC/B,IAAMC,EAAYC,EAAqBH,EAAOC,GAC9C,OAAOG,IAAMC,IAAN,aAAwB,CAC7BC,QAAS,CAAEC,cAAeL,KAIvB,SAASM,EAA2BR,EAAOC,GAChD,IAAMC,EAAYC,EAAqBH,EAAOC,GAE9CQ,eAAeC,QAZ2B,oBAYWR,GAIhD,SAA8BA,GACnCE,IAAMO,aAAaC,QAAQC,KAAI,SAAAC,GAI7B,OAHIC,MACFD,EAAOR,QAAQC,cAAgBL,GAE1BY,KARTE,CAAqBd,GAYhB,SAASC,EAAqBc,EAAUhB,GAC7C,MAAO,SAAWiB,OAAOC,KAAKF,EAAW,IAAMhB,GAG1C,SAASc,IAEd,OAAa,OADFN,eAAeW,QA9BgB,qB,qBC4E7BC,E,2MAxEbC,MAAQ,CACNtB,MAAO,GACPC,SAAU,GACVsB,OAAO,G,EAUTC,SAAW,SAAAC,GACT,EAAKC,SAAL,eACGD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,S,EAG9BC,SAAW,SAAAL,GACTA,EAAEM,iBADY,MAEc,EAAKT,MAAzBtB,EAFM,EAENA,MAAOC,EAFD,EAECA,SACXD,GAAUC,EAKdF,EAAUC,EAAOC,GACd+B,MAAK,WACJxB,EAA2BR,EAAOC,GAClCiB,OAAOe,SAASC,KAAO,gBAExBC,OAAM,WACL,EAAKT,SAAS,CACZH,OAAO,OAXT,EAAKG,SAAS,CACZH,OAAM,K,mFAhBMd,eAAeW,QAAQ,sBAEvCgB,KAAKC,MAAMC,QAAQC,KAAK,gB,+BA8BlB,IAAD,EAC4BH,KAAKd,MAAhCtB,EADD,EACCA,MAAOC,EADR,EACQA,SAAUsB,EADlB,EACkBA,MACzB,OACE,yBAAKiB,UAAU,iBACb,0BAAMV,SAAUM,KAAKN,SAAUU,UAAU,cACvC,qHACA,yBACEA,UAAWC,IAAW,gBAAiB,CACrCC,KAAMnB,KAGR,+LAEF,2BACEoB,KAAK,OACLC,YAAY,iCACZhB,KAAK,QACLJ,SAAUY,KAAKZ,SACfK,MAAO7B,IAET,2BACE2C,KAAK,WACLC,YAAY,uCACZhB,KAAK,WACLJ,SAAUY,KAAKZ,SACfK,MAAO5B,IAET,4BAAQ0C,KAAK,UAAb,wC,GAnEcE,a,QCoBTC,G,iMAnBXrC,eAAesC,WAAW,qBAC1B7B,OAAOe,SAASC,KAAO,W,+BAEf,IAAD,OACP,OACE,gCACE,kBAAC,IAAD,CAASc,GAAI,aAAcC,gBAAgB,eAA3C,0DAGA,kBAAC,IAAD,CAASD,GAAI,WAAYC,gBAAgB,eAAzC,8CAGA,4BAAQN,KAAK,SAASO,QAAS,kBAAM,EAAKC,eAA1C,uC,GAdaN,cCFd,SAASO,IACd,OAAOhD,IAAMC,IAAN,uBAGF,SAASgD,EAAQC,GACtB,OAAOlD,IAAMmD,KAAN,qBAAiCD,G,ICoI3BE,E,2MApIblC,MAAQ,CACNmC,YAAa,GACbH,UAAW,CACTI,gBAAiB,GACjBC,cAAe,GACfC,YAAa,GACbC,UAAW,GAEbtC,OAAO,G,EAWTC,SAAW,SAAAC,GACT,EAAKC,SAAS,CACZ4B,UAAU,eACL,EAAKhC,MAAMgC,UADP,eAEN7B,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,W,EAKhCqB,QAAU,WAAO,IACPI,EAAc,EAAKhC,MAAnBgC,UACFQ,EAAMR,EAAUM,YAAYG,QAAQ,IAAK,KAC/CT,EAAUM,YAAcE,EACxBT,EAAQC,GACLtB,MAAK,SAAAgC,GACJ,EAAKtC,SAAS,CACZmC,UAAWG,EAAIC,KACf1C,OAAO,OAGVY,OAAM,WACL,EAAKT,SAAS,CACZH,OAAO,Q,mFA9BM,IAAD,OAClB6B,IAAcpB,MAAK,SAAAgC,GACjB,EAAKtC,SAAS,CACZ+B,YAAaO,EAAIC,Y,+BAgCb,IAAD,EAQH7B,KAAKd,MANP4C,EAFK,EAELA,cACAC,EAHK,EAGLA,YACAP,EAJK,EAILA,YACAC,EALK,EAKLA,UACAJ,EANK,EAMLA,YACAlC,EAPK,EAOLA,MAEF,OACE,6BACE,kBAAC,EAAD,MACA,yBAAKiB,UAAU,qBACb,yBAAKA,UAAU,aACb,qHACA,yBACEA,UAAWC,IAAW,gBAAiB,CACrCC,KAAMnB,KAGR,qPAEF,yBAAKiB,UAAU,YACb,+BACE,uHACA,4BACEZ,KAAK,kBACLJ,SAAUY,KAAKZ,SACfK,MAAOqC,GAEP,iFACCT,EAAYW,KAAI,YAA6B,IAA1BC,EAAyB,EAAzBA,GAAIzC,EAAqB,EAArBA,KAAM0C,EAAe,EAAfA,SAC5B,OACE,4BACEzC,MAAOwC,EACPE,IAAKF,GAFP,UAGKC,EAHL,aAGkB1C,EAHlB,WAQR,+BACE,iHACA,4BACEA,KAAK,gBACLJ,SAAUY,KAAKZ,SACfK,MAAOsC,GAEP,iFACCV,EAAYW,KAAI,YAA6B,IAA1BC,EAAyB,EAAzBA,GAAIzC,EAAqB,EAArBA,KAAM0C,EAAe,EAAfA,SAC5B,OACE,4BACEzC,MAAOwC,EACPE,IAAKF,GAFP,UAGKC,EAHL,aAGkB1C,EAHlB,YASV,yBAAKY,UAAU,UACb,+BACE,iHACA,2BACEG,KAAK,OACLC,YAAY,iCACZhB,KAAK,cACLJ,SAAUY,KAAKZ,SACfK,MAAO+B,KAGX,+BACE,2GACA,0BAAMS,GAAG,aAA2B,IAAdR,EAAkBA,EAAY,OAIxD,yBAAKrB,UAAU,kBACb,4BAAQU,QAASd,KAAKc,SAAtB,gG,GA7HUL,a,MCJjB,SAAS2B,EAAWC,EAAMP,EAAeC,GAC9C,OAAO/D,IAAMC,IAAN,wBACYoE,EADZ,0BACkCP,EADlC,wBAC+DC,I,IC2IzDO,E,2MAxIbpD,MAAQ,CACNmC,YAAa,GACbkB,YAAa,GACbF,KAAM,GACNP,cAAe,GACfC,YAAa,I,EAgBf3C,SAAW,SAAAC,GACT,EAAKC,SAAL,eACGD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,S,EAG9BqB,QAAU,WAAO,IAAD,EAC+B,EAAK5B,MAA1C4C,EADM,EACNA,cAAeC,EADT,EACSA,YACvBK,EAFc,EACsBC,KACnBP,EAAeC,GAAanC,MAAK,SAAAgC,GAChD,EAAKtC,SAAS,CACZiD,YAAaX,EAAIC,W,mFAtBF,IAAD,SAC2B7B,KAAKd,MAA1C4C,EADU,EACVA,cAAeC,EADL,EACKA,YACvBK,EAFkB,EACkBC,KACnBP,EAAeC,GAAanC,MAAK,SAAAgC,GAChD,EAAKtC,SAAS,CACZiD,YAAaX,EAAIC,UAGrBb,IAAcpB,MAAK,SAAAgC,GACjB,EAAKtC,SAAS,CACZ+B,YAAaO,EAAIC,Y,+BAiBb,IAAD,EAOH7B,KAAKd,MALPmD,EAFK,EAELA,KACAP,EAHK,EAGLA,cACAC,EAJK,EAILA,YACAQ,EALK,EAKLA,YACAlB,EANK,EAMLA,YAEF,OACE,6BACE,kBAAC,EAAD,MACA,yBAAKjB,UAAU,mBACb,yBAAKA,UAAU,WACb,0EACA,yBAAKA,UAAU,WACb,2BACEG,KAAK,OACLf,KAAK,OACLJ,SAAUY,KAAKZ,SACfK,MAAO4C,IAET,+BACE,8CACA,4BACE7C,KAAK,gBACLJ,SAAUY,KAAKZ,SACfK,MAAOqC,GAEP,4BAAQrC,MAAM,IAAd,iDACC4B,EAAYW,KAAI,YAA6B,IAA1BC,EAAyB,EAAzBA,GAAIzC,EAAqB,EAArBA,KAAM0C,EAAe,EAAfA,SAC5B,OACE,4BACEzC,MAAOyC,EACPC,IAAKF,GAFP,UAGKC,EAHL,aAGkB1C,EAHlB,WAQR,+BACE,wCACA,4BACEA,KAAK,cACLJ,SAAUY,KAAKZ,SACfK,MAAOsC,GAEP,4BAAQtC,MAAM,IAAd,iDACC4B,EAAYW,KAAI,YAA6B,IAA1BC,EAAyB,EAAzBA,GAAIzC,EAAqB,EAArBA,KAAM0C,EAAe,EAAfA,SAC5B,OACE,4BACEzC,MAAOyC,EACPC,IAAKF,GAFP,UAGKC,EAHL,aAGkB1C,EAHlB,WAQR,4BAAQsB,QAASd,KAAKc,SAAtB,mCAEF,6BACE,+BACE,+BACE,4BACE,qHACA,+GACA,+GACA,2HACA,0DAGJ,+BACGyB,EAAYP,KACX,WAQEQ,GACI,IAPFV,EAOC,EAPDA,cACAC,EAMC,EANDA,YACAP,EAKC,EALDA,YACAC,EAIC,EAJDA,UACAY,EAGC,EAHDA,KAIF,OACE,wBAAIF,IAAKK,GACP,4BAAKV,GACL,4BAAKC,GACL,4BAAKP,GACL,4BAAKC,GACL,4BAAKY,iB,GA3HT5B,aCOPgC,E,iLAPX,OAAI9D,IACK,kBAAC,IAAUqB,KAAKC,OAEhB,kBAAC,IAAD,CAAUW,GAAG,e,GALOH,aCMlBiC,EARE,SAAAC,GACXA,EACF3E,IAAM4E,SAAS1E,QAAQ2E,OAAvB,cAAiDF,SAE1C3E,IAAM4E,SAAS1E,QAAQ2E,OAAvB,eCGL/E,EAAYO,eAAeW,QAAQ,qBACrClB,GACF4E,EAAS5E,G,IAeIgF,E,iLAXX,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWhE,IACjC,kBAAC,IAAD,CAAO8D,OAAK,EAACC,KAAK,SAASC,UAAWhE,IACtC,kBAAC,EAAD,CAAoB8D,OAAK,EAACC,KAAK,aAAaC,UAAW7B,IACvD,kBAAC,EAAD,CAAoB2B,OAAK,EAACC,KAAK,WAAWC,UAAWX,S,GAP3C7B,aCDEyC,QACW,cAA7BpE,OAAOe,SAASsD,UAEe,UAA7BrE,OAAOe,SAASsD,UAEhBrE,OAAOe,SAASsD,SAASC,MACvB,2DCbNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD8H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM/D,MAAK,SAAAgE,GACjCA,EAAaC,kB","file":"static/js/main.12312476.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport const SESSION_ATTRIBUTE_USER_LOGIN = \"authenticatedUser\";\n\nexport function loginUser(login, password) {\n  const authToken = createBasicAuthToken(login, password);\n  return axios.get(`/basicauth`, {\n    headers: { authorization: authToken }\n  });\n}\n\nexport function registerUserAuthentication(login, password) {\n  const authToken = createBasicAuthToken(login, password);\n\n  sessionStorage.setItem(SESSION_ATTRIBUTE_USER_LOGIN, authToken);\n  setAxiosInterceptors(authToken);\n}\n\nexport function setAxiosInterceptors(authToken) {\n  axios.interceptors.request.use(config => {\n    if (isUserLoggedIn()) {\n      config.headers.authorization = authToken;\n    }\n    return config;\n  });\n}\n\nexport function createBasicAuthToken(username, password) {\n  return \"Basic \" + window.btoa(username + \":\" + password);\n}\n\nexport function isUserLoggedIn() {\n  let user = sessionStorage.getItem(SESSION_ATTRIBUTE_USER_LOGIN);\n  if (user === null) return false;\n  return true;\n}\n\nexport function logout() {\n  sessionStorage.removeItem(SESSION_ATTRIBUTE_USER_LOGIN);\n}\n","import React, { Component } from \"react\";\nimport \"./login-page.css\";\nimport { loginUser, registerUserAuthentication } from \"../actions/user-actions\";\nimport classNames from \"classnames\";\n\nclass LoginPage extends Component {\n  state = {\n    login: \"\",\n    password: \"\",\n    error: false\n  };\n\n  componentDidMount() {\n    const authToken = sessionStorage.getItem(\"authenticatedUser\");\n    if (authToken) {\n      this.props.history.push(\"/converter\");\n    }\n  }\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n  onSubmit = e => {\n    e.preventDefault();\n    const { login, password } = this.state;\n    if(!login || !password ){\n        this.setState({\n          error:true\n        })\n    }else{\n    loginUser(login, password)\n      .then(() => {\n        registerUserAuthentication(login, password);\n        window.location.href = \"/converter\";\n      })\n      .catch(() => {\n        this.setState({\n          error: true\n        });\n      });\n    }\n  };\n\n  render() {\n    const { login, password, error } = this.state;\n    return (\n      <div className=\"wrapper-login\">\n        <form onSubmit={this.onSubmit} className=\"login-page\">\n          <h1>Конвертер валют</h1>\n          <div\n            className={classNames(\"error-message\", {\n              show: error\n            })}\n          >\n            <p>Неправильный логин или пароль</p>\n          </div>\n          <input\n            type=\"text\"\n            placeholder=\"Логин\"\n            name=\"login\"\n            onChange={this.onChange}\n            value={login}\n          />\n          <input\n            type=\"password\"\n            placeholder=\"Пароль\"\n            name=\"password\"\n            onChange={this.onChange}\n            value={password}\n          />\n          <button type=\"submit\">Войти</button>\n        </form>\n      </div>\n    );\n  }\n}\nexport default LoginPage;\n","import React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./header.css\";\n\nclass Header extends Component {\n  logoutUser() {\n    sessionStorage.removeItem(\"authenticatedUser\");\n    window.location.href = \"/login\";\n  }\n  render() {\n    return (\n      <header>\n        <NavLink to={\"/converter\"} activeClassName=\"active-link\">\n          Конвертер\n        </NavLink>\n        <NavLink to={\"/history\"} activeClassName=\"active-link\">\n          История\n        </NavLink>\n        <button type=\"button\" onClick={() => this.logoutUser()}>\n          Выход\n        </button>\n      </header>\n    );\n  }\n}\nexport default Header;\n","import axios from \"axios\";\n\nexport function getCurrency() {\n  return axios.get(`/converter/currency`);\n}\n\nexport function convert(converter) {\n  return axios.post(`/converter/convert`, converter);\n}\n","import React, { Component } from \"react\";\nimport \"./converter.css\";\nimport Header from \"./header\";\nimport { getCurrency, convert } from \"../actions/converter-actions\";\nimport classNames from \"classnames\";\n\nclass Converter extends Component {\n  state = {\n    allCurrency: [],\n    converter: {\n      startCurrencyId: \"\",\n      endCurrencyId: \"\",\n      startAmount: \"\",\n      endAmount: 0\n    },\n    error: false\n  };\n\n  componentDidMount() {\n    getCurrency().then(res => {\n      this.setState({\n        allCurrency: res.data\n      });\n    });\n  }\n\n  onChange = e => {\n    this.setState({\n      converter: {\n        ...this.state.converter,\n        [e.target.name]: e.target.value\n      }\n    });\n  };\n\n  onClick = () => {\n    const { converter } = this.state;\n    const str = converter.startAmount.replace(\",\", \".\");\n    converter.startAmount = str;\n    convert(converter)\n      .then(res => {\n        this.setState({\n          endAmount: res.data,\n          error: false\n        });\n      })\n      .catch(() => {\n        this.setState({\n          error: true\n        });\n      });\n  };\n\n  render() {\n    const {\n      startCurrency,\n      endCurrency,\n      startAmount,\n      endAmount,\n      allCurrency,\n      error\n    } = this.state;\n    return (\n      <div>\n        <Header />\n        <div className=\"wrapper-converter\">\n          <div className=\"converter\">\n            <h1>Конвертер валют</h1>\n            <div\n              className={classNames(\"error-message\", {\n                show: error\n              })}\n            >\n              <p>Проверьте правильность введеных данных</p>\n            </div>\n            <div className=\"currency\">\n              <label>\n                <span>Исходная валюта</span>\n                <select\n                  name=\"startCurrencyId\"\n                  onChange={this.onChange}\n                  value={startCurrency}\n                >\n                  <option>Выбрать...</option>\n                  {allCurrency.map(({ id, name, charCode }) => {\n                    return (\n                      <option\n                        value={id}\n                        key={id}\n                      >{`${charCode} (${name})`}</option>\n                    );\n                  })}\n                </select>\n              </label>\n              <label>\n                <span>Целевая валюта</span>\n                <select\n                  name=\"endCurrencyId\"\n                  onChange={this.onChange}\n                  value={endCurrency}\n                >\n                  <option>Выбрать...</option>\n                  {allCurrency.map(({ id, name, charCode }) => {\n                    return (\n                      <option\n                        value={id}\n                        key={id}\n                      >{`${charCode} (${name})`}</option>\n                    );\n                  })}\n                </select>\n              </label>\n            </div>\n            <div className=\"amount\">\n              <label>\n                <span>Исходная сумма</span>\n                <input\n                  type=\"text\"\n                  placeholder=\"Сумма\"\n                  name=\"startAmount\"\n                  onChange={this.onChange}\n                  value={startAmount}\n                />\n              </label>\n              <label>\n                <span>Итог перевода</span>\n                <span id=\"endAmount\">{endAmount !== 0 ? endAmount : \"-\"}</span>\n              </label>\n            </div>\n\n            <div className=\"convert-button\">\n              <button onClick={this.onClick}>Конвертировать</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Converter;\n","import axios from \"axios\";\n\nexport function getHistory(date, startCurrency, endCurrency) {\n  return axios.get(\n    `/history?date=${date}&startCurrency=${startCurrency}&endCurrency=${endCurrency}`\n  );\n}\n","import React, { Component } from \"react\";\nimport \"./history.css\";\nimport Header from \"./header\";\nimport { getHistory } from \"../actions/history-actions\";\nimport { getCurrency } from \"../actions/converter-actions\";\n\nclass History extends Component {\n  state = {\n    allCurrency: [],\n    historyRows: [],\n    date: \"\",\n    startCurrency: \"\",\n    endCurrency: \"\"\n  };\n\n  componentDidMount() {\n    const { startCurrency, endCurrency, date } = this.state;\n    getHistory(date, startCurrency, endCurrency).then(res => {\n      this.setState({\n        historyRows: res.data\n      });\n    });\n    getCurrency().then(res => {\n      this.setState({\n        allCurrency: res.data\n      });\n    });\n  }\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n  onClick = () => {\n    const { startCurrency, endCurrency, date } = this.state;\n    getHistory(date, startCurrency, endCurrency).then(res => {\n      this.setState({\n        historyRows: res.data\n      });\n    });\n  };\n  render() {\n    const {\n      date,\n      startCurrency,\n      endCurrency,\n      historyRows,\n      allCurrency\n    } = this.state;\n    return (\n      <div>\n        <Header />\n        <div className=\"wrapper-history\">\n          <div className=\"history\">\n            <h1>История</h1>\n            <div className=\"filters\">\n              <input\n                type=\"date\"\n                name=\"date\"\n                onChange={this.onChange}\n                value={date}\n              />\n              <label>\n                <span>Из</span>\n                <select\n                  name=\"startCurrency\"\n                  onChange={this.onChange}\n                  value={startCurrency}\n                >\n                  <option value=\"\">Выбрать...</option>\n                  {allCurrency.map(({ id, name, charCode }) => {\n                    return (\n                      <option\n                        value={charCode}\n                        key={id}\n                      >{`${charCode} (${name})`}</option>\n                    );\n                  })}\n                </select>\n              </label>\n              <label>\n                <span>В</span>\n                <select\n                  name=\"endCurrency\"\n                  onChange={this.onChange}\n                  value={endCurrency}\n                >\n                  <option value=\"\">Выбрать...</option>\n                  {allCurrency.map(({ id, name, charCode }) => {\n                    return (\n                      <option\n                        value={charCode}\n                        key={id}\n                      >{`${charCode} (${name})`}</option>\n                    );\n                  })}\n                </select>\n              </label>\n              <button onClick={this.onClick}>Поиск</button>\n            </div>\n            <div>\n              <table>\n                <thead>\n                  <tr>\n                    <th>Исходная валюта</th>\n                    <th>Цеоевая валюта</th>\n                    <th>Исходная сумма</th>\n                    <th>Получаемая сумма</th>\n                    <th>Дата</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {historyRows.map(\n                    (\n                      {\n                        startCurrency,\n                        endCurrency,\n                        startAmount,\n                        endAmount,\n                        date\n                      },\n                      index\n                    ) => {\n                      return (\n                        <tr key={index}>\n                          <td>{startCurrency}</td>\n                          <td>{endCurrency}</td>\n                          <td>{startAmount}</td>\n                          <td>{endAmount}</td>\n                          <td>{date}</td>\n                        </tr>\n                      );\n                    }\n                  )}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default History;\n","import React, { Component } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { isUserLoggedIn } from \"../actions/user-actions\";\n\nclass AuthenticatedRoute extends Component {\n  render() {\n    if (isUserLoggedIn()) {\n      return <Route {...this.props} />;\n    } else {\n      return <Redirect to=\"/login\" />;\n    }\n  }\n}\nexport default AuthenticatedRoute;\n","import axios from \"axios\";\n\nconst setToken = token => {\n  if (token) {\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport default setToken;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport LoginPage from \"./component/login-page\";\nimport Converter from \"./component/converter\";\nimport History from \"./component/history\";\nimport AuthenticatedRoute from \"./utils/authenticated-route\";\nimport setToken from \"./utils/authHeader\";\n\nconst authToken = sessionStorage.getItem(\"authenticatedUser\");\nif (authToken) {\n  setToken(authToken);\n}\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <Route exact path=\"/\" component={LoginPage} />\n        <Route exact path=\"/login\" component={LoginPage} />\n        <AuthenticatedRoute exact path=\"/converter\" component={Converter} />\n        <AuthenticatedRoute exact path=\"/history\" component={History} />\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}